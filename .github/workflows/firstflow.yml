# This is a basic workflow to help you get started with Actions

name: myhomework

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ homework ]
  pull_request:
    branches: [ homework ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  
  build:
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v2
      - name: build Dockerfile
        run: docker build -t tonktawork .

  images:
    needs: build
    runs-on: self-hosted
    steps:
      - name: tag image
        run: docker tag tonktawork tonktatonkjai/tonk-registry:1.0.0
      - name: push image to registry
        run: docker push tonktatonkjai/tonk-registry:1.0.0

  deploy:
    needs: images
    runs-on: self-hosted
    steps:
      - name: check images
        run: docker images
      - name: helm install
        run: helm upgrade -i --create-namespace --atomic --wait --namespace test tonktawork -f helm/values.yaml helm/
  check:
    needs: deploy
    runs-on: self-hosted
    steps:
      - name: check helm
        run: helm list -n test
      - name: check pod
        run: kubectl get po -n test


          # - name: deploy deployment
          #run: kubectl apply -f hw-deploy.yml -n homework
          #- name: create service
          #run: kubectl apply -f hw-svc.yml -n homework

          #check:
          #needs: deploy
          #runs-on: self-hosted
          #steps:
          # - name: check curl
          #run: HTTP_RESULT=$(curl -i localhost:80 2>/dev/null |grep HTTP|awk '{print $2}' ); if [ "$HTTP_RESULT" = '200' ];then echo "deployed successful";exit 0; else echo "deployed failed";exit 255;fi
